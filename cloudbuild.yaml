# steps:
#   # Step 1: Build the Docker image
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['build', '-t', 'gcr.io/$PROJECT_ID/app-image:$SHORT_SHA', '.']

#   # Step 2: Push the Docker image to GCR
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['push', 'gcr.io/$PROJECT_ID/app-image:$SHORT_SHA']

#   # Step 3: Deploy the updated image to GKE
#   - name: 'gcr.io/cloud-builders/kubectl'
#     args:
#     - 'apply'
#     - '-f'
#     - 'deployment.yaml'
#     env:
#     - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
#     - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster'

#   # Step 4: Update the image in the deployment
#   - name: 'gcr.io/cloud-builders/kubectl'
#     args:
#     - 'set'
#     - 'image'
#     - 'deployment/flask-app'
#     - 'flask-app=gcr.io/$PROJECT_ID/app-image:$SHORT_SHA'
#     env:
#     - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
#     - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster'

# substitutions:
#   _CLUSTER_NAME: 'my-cluster'
#   _ZONE: 'us-central1-a'

# options:
#   logging: CLOUD_LOGGING_ONLY

  
steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/app-image:$SHORT_SHA', '.']

  # Step 2: Push the Docker image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/app-image:$SHORT_SHA']

images:
  - 'gcr.io/$PROJECT_ID/app-image:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
